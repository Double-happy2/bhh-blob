import{_ as a,c as s,o as n,a as e}from"./app.5358fa95.js";const u=JSON.parse('{"title":"数据类型","description":"","frontmatter":{},"headers":[{"level":2,"title":"数值型","slug":"数值型","link":"#数值型","children":[]},{"level":2,"title":"字符串型","slug":"字符串型","link":"#字符串型","children":[]},{"level":2,"title":"布尔型","slug":"布尔型","link":"#布尔型","children":[]},{"level":2,"title":"未定义型","slug":"未定义型","link":"#未定义型","children":[]},{"level":2,"title":"空","slug":"空","link":"#空","children":[]}],"relativePath":"js/jsbase/datatype.md"}'),l={name:"js/jsbase/datatype.md"},p=e(`<h1 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-hidden="true">#</a></h1><p>JavaScript 数据类型分为原始类型和引用类型，原始类型分为数值型、字符串型、布尔型、未定义型、空</p><h2 id="数值型" tabindex="-1">数值型 <a class="header-anchor" href="#数值型" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">10进制</span></span>
<span class="line"><span style="color:#A6ACCD;">  1  2   3   ..    7   8   9   10  ..   15   16</span></span>
<span class="line"><span style="color:#A6ACCD;">  8进制：以0开头的数字，例如：012</span></span>
<span class="line"><span style="color:#A6ACCD;">  1  2   3   ..    7  10  11  12</span></span>
<span class="line"><span style="color:#A6ACCD;">  16进制：以0X开头的数字，不区分大小写，例如：0XA</span></span>
<span class="line"><span style="color:#A6ACCD;">  1  2   3   ..    7   8   9    a   ~   f    10</span></span>
<span class="line"><span style="color:#A6ACCD;">  浮点型</span></span>
<span class="line"><span style="color:#A6ACCD;">  3141.5e-1</span></span>
<span class="line"><span style="color:#A6ACCD;">  314.15</span></span>
<span class="line"><span style="color:#A6ACCD;">  31.415e1</span></span>
<span class="line"><span style="color:#A6ACCD;">  3.1415e2</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="字符串型" tabindex="-1">字符串型 <a class="header-anchor" href="#字符串型" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">所有被引号包裹的数据就是字符串型,查看任意一个字符的Unicode码使用a&#39;.charCodeAt()</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="布尔型" tabindex="-1">布尔型 <a class="header-anchor" href="#布尔型" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">只有两个值，分别是true和false，代表真和假,用于保存只有两个值的数据，例如：是否为会员、是否登录、是否已婚...</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="未定义型" tabindex="-1">未定义型 <a class="header-anchor" href="#未定义型" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">只有一个值undefined，声明变量未赋值则值为undefined,表示空值</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="空" tabindex="-1">空 <a class="header-anchor" href="#空" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">只有一个值null，常用于对象中</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,12),t=[p];function i(c,o,r,d,h,C){return n(),s("div",null,t)}const y=a(l,[["render",i]]);export{u as __pageData,y as default};
